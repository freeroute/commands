git diff
	git diff file
	git diff --color-words
	git diff --cached or --staged
	git diff SHA1..SHA1
	git diff --stats --summ
	git show
	git show SHA1
	git show SHA1 --stats --summ --colorized

Rename
	git mv file.txt new-file.txt
		git status

Ignoring files
	.gitignore	git add -A, git commit -m "message" is kell utána
	git rm --cached file.txt	remove file from the staging index

Branches>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

	git branch	show branches on local machine
	git branch new-branch	create new-branch
	git checkout branch	switch to branch
	git checkout -b new-branch 	create new-branch and checkout to new-branch
	git branch -a 	show all local and remote branches
	git merge new-branch
	git branch mv branch new-branch
	git branch --delete branch
	
+	Comparing branches
		git diff master..new-branch	.. range operator
		git diff --color-words master..new-branch
		git branch --merged

+	Rename branches
		git branch --move old-branch renamed-branch
		git branch -m 

+	Deleting branches
		git branch --delete branch
		git branch -d branch

+	Merge branches
		git merge new-branch	
		git branch --merged	show merged branches
			git log
			git diff master..new-branch
 
Fast-forward merges vs. real-merges

	git merge --no-ff branch	no-fastforward -- make a new commit anyway
	git merge --ff-only branch	do a fastforward only, if not possible quit!

Merge conflicts

+	git merge --abort		abort merge branches

Manually
+	git log --oneline -3
	git show SHA1 	megmutatja mi modosult

Merge tool
+	git merge-tool	list merge tools
	git merge-tool --tool=xxxxx
	
Undoing changes on>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
 
	Working dir
		git checkout -- file.txt

	Staging index (un-stage things)
		git reset HEAD file.txt

	Repository itself
		git commit --amend -m "message"
		git checkout SHA1 -- file.txt 	SHA1 az a hash amire vissza akarok állni. Kiteszi a stage indexbe. 
		git revert SHA1		revert old commit, exact opposite of changes, like a mirror
	reset to undo many commits	powerful and also very dangerous	
		git reset --soft SHA1	safest option, not change staging index or working directory, move the pointer back only
		git reset --mixed SHA1	default, move the pointer back and changes staging index to match repository, not change working directory
		git reset --hard SHA1	move the pointer back and change staging index and working directory to match repository


Remove untracked files from working directory
	git clean -n 	dry run, info what to remove
	git clean -f	remove, permanently delete



Saving changes in the stash:

		git stash save "commit"
		git stash show -p stash@{0}
	
	Retrieving stashes
		git stash list		list stashed files
		git stash pop 	move stash back to the working directory
		git stash apply	move stash back to the working directory + leave a copy in a stash
	
	Deleting stashes
		git stash drop	or
		git stash drop stash@{0}
		git stash clear		remove all the stashes!

Remote repositories:

		git remote		list all remotes
		git remote add <alias> url
		git remote -v 		list all remotes verbose
		git remote rm alias	delete alias 

	Create remote branch
		git push -u <alias> master
		git branch -r 	list remote branches
		git branch -a list all branches, local and remote

	Clone remote repository
		git clone url.git
		git clone url.git .		do not create directory, only download and save files

	Pushing changes to remote repository
		git push origin master

	Fetching changes from remote repository
		git fetch origin  or
		git fetch

	Merging in fethces changes
		git merge origin/master

		git pull = git fetch + git merge !!!!!!!!!!

	Delete remote branches
		git push origin --delete branch
		git push origin:branch



